# 先看官方案例
using Flux

f(x) = 3x^2 + 2x + 1
df(x) = gradient(f, x)[1] #如果不加[1]，输出的是个tuple
df(2)
# 上述形式比较符合数学习惯f是已经定义的函数，是个映射关系。x是自变量。
# 单变量求导不会发生歧义，所以如下方式也可以直接求出，即对x求导以及x=2一步到位。
gradient(f,2)[1]


# 多变量函数
f(x, y) = sum((x .- y).^2)
dfdx(x)=gradient(f,x,1)
dfdx(2) #(2, -2)
# 这是求偏导，则去其余变量都应该是数值而不是变量。变量按出现的位置区分。但是上述代码出乎你的意料。原本认为输入一个x的值会得到一个偏导数。
# 但是实际上返回两个，可见gradient是对两个偏导都求了。
# 这或许就是函数命名为gradient而不是导数的原因。
# 上述代码等效于
gradient(f,2,1)
#幸运的是，多变量似乎容许数组
gradient(f,[2, 1], [2, 0])
gradient(f,rand(5),rand(5))

# 也可以不立即求出导数值，而是等待之后的输入。
x=[2.0]
w=rand()
b=rand()
f(w,b) = first(w*x)+b
gs = gradient(() -> f(w,b), params(x))
gs[x]
# params中的参数仅支持数组。w,b必须先定义，x为要求导的变量。但是访问貌似只能用key来访问而不能用值。